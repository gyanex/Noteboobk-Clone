import { File } from 'buffer';
import { ExtractConfig, ExtractAgent } from '../../api/dist/index.cjs';
export { ExtractAgent, ExtractConfig } from '../../api/dist/index.cjs';
import { Client } from '@hey-api/client-fetch';

type ExtractResult = {
    data: {
        [key: string]: {
            [key: string]: unknown;
        } | Array<unknown> | string | number | number | boolean | null;
    } | Array<{
        [key: string]: {
            [key: string]: unknown;
        } | Array<unknown> | string | number | number | boolean | null;
    }> | null;
    extractionMetadata: {
        [key: string]: {
            [key: string]: unknown;
        } | Array<unknown> | string | number | number | boolean | null;
    };
};

declare function createAgent(name: string, dataSchema: {
    [key: string]: {
        [key: string]: unknown;
    } | Array<unknown> | string | number | number | boolean | null;
} | string, config?: ExtractConfig, project_id?: string | null, organization_id?: string | null, client?: Client | undefined, maxRetriesOnError?: number, retryInterval?: number): Promise<ExtractAgent | undefined>;
declare function getAgent(id?: string | undefined, name?: string | undefined, project_id?: string | null, organization_id?: string | null, client?: Client | undefined, maxRetriesOnError?: number, retryInterval?: number): Promise<ExtractAgent | undefined>;
declare function extract(agentId: string, filePath?: string | undefined, fileContent?: Buffer<ArrayBufferLike> | File | Uint8Array<ArrayBuffer> | string | undefined, fileName?: string | undefined, project_id?: string | null, organization_id?: string | null, client?: Client | undefined, fromUi?: boolean | undefined, pollingInterval?: number, maxPollingIterations?: number, maxRetriesOnError?: number, retryInterval?: number): Promise<ExtractResult | undefined>;
declare function extractStateless(dataSchema: {
    [key: string]: {
        [key: string]: unknown;
    } | Array<unknown> | string | number | number | boolean | null;
} | string, config?: ExtractConfig, filePath?: string | undefined, fileContent?: Buffer<ArrayBufferLike> | File | Uint8Array<ArrayBuffer> | string | undefined, fileName?: string | undefined, project_id?: string | null, organization_id?: string | null, client?: Client | undefined, pollingInterval?: number, maxPollingIterations?: number, maxRetriesOnError?: number, retryInterval?: number): Promise<ExtractResult | undefined>;
declare function deleteAgent(id: string, client?: Client | undefined, maxRetriesOnError?: number, retryInterval?: number): Promise<boolean | undefined>;

export { createAgent, deleteAgent, extract, extractStateless, getAgent };
